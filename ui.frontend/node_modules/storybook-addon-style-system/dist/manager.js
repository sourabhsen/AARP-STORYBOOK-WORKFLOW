import { useGlobals, useStorybookApi, addons, types, useAddonState, useChannel, useParameter } from '@storybook/manager-api';
import c, { memo, useCallback, useEffect, useState } from 'react';
import { IconButton, Icons, AddonPanel } from '@storybook/components';
import { styled } from '@storybook/theming';
import { addons as addons$1 } from '@storybook/addons';

var e="storybook/style-system",d=`${e}/tool`,u=`${e}/panel`,p="myAddonParameter",l={RESULT:`${e}/result`,REQUEST:`${e}/request`,CLEAR:`${e}/clear`,CHANGE:`${e}/change`};var D=memo(function(){let[r,n]=useGlobals(),a=useStorybookApi(),o=[!0,"true"].includes(r[p]),s=useCallback(()=>{n({[p]:!o});},[o]);return useEffect(()=>{a.setAddonShortcut(e,{label:"Toggle Measure [O]",defaultShortcut:["O"],actionName:"outline",showInMenu:!1,action:s});},[s,a]),c.createElement(IconButton,{key:d,active:o,title:"Enable my addon",onClick:s},c.createElement(Icons,{icon:"lightning"}))});var b=styled.div`
  padding: 10px;
`,R=styled.select`
  padding: 5px;
  margin-right: 10px;
`,S=({results:t,fetchData:r,clearData:n})=>{let[a,o]=useState(""),s=i=>{let m=i.target.value;console.log("selectedStyle",m),o(m),addons$1.getChannel().emit(l.CHANGE,{selectedStyle:m});};return window.addEventListener("message",i=>{}),c.createElement(c.Fragment,null,c.createElement(b,null,c.createElement(R,{value:a,onChange:s},c.createElement("option",{value:""},"Select a style"),t?.cssClass?.length>0&&t?.cssClass.map((i,m)=>c.createElement("option",{key:m,value:i},i)))))};function P(t,r=[]){for(let n in t)n==="cq:styleClasses"?r.push(t[n]):typeof t[n]=="object"&&P(t[n],r);return r}var C=t=>{let[r,n]=useAddonState(e,{cssClass:[]}),a=useChannel({[l.RESULT]:s=>n(s)}),o=useParameter(p,"");return useEffect(()=>{if(o){console.log("paramData--22",o);let s=P(o.policy);a(l.RESULT,{cssClass:s});}},[o]),c.createElement(AddonPanel,{...t},c.createElement(S,{results:r,fetchData:()=>{a(l.REQUEST);},clearData:()=>{a(l.CLEAR);}}))};addons.register(e,()=>{addons.add(d,{type:types.TOOL,title:"Style-System",match:({viewMode:t})=>!!(t&&t.match(/^(story|docs)$/)),render:D}),addons.add(u,{type:types.PANEL,title:"Style-System",match:({viewMode:t})=>t==="story",render:C});});
//# sourceMappingURL=out.js.map
//# sourceMappingURL=manager.js.map